import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.utils.keyboard import KeyboardBuilder, InlineKeyboardBuilder, ReplyKeyboardBuilder
from button import start_button, doctor_button, cancel_button, moth_keyboard
from dotenv import load_dotenv
import os


load_dotenv()

#–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
TOKEN = os.getenv("Token")
bot = Bot(token = TOKEN)
dp = Dispatcher()

#start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!", reply_markup=start_button)
    

@dp.message(F.text == "–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?")
async def process_start(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É", reply_markup=doctor_button)
    
#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏—ë–º
@dp.message(F.text == "üìù–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º")
async def process_list(message: types.Message):
    await message.answer("–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –¥–∞—Ç—É", reply_markup=moth_keyboard())

#–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.callback_query(F.data.startswith("month_"))
async def month_selected(callback: types.CallbackQuery):
    month_index = int(callback.data.split("_")[1])
    months = [
        "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å",
        "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å",
        "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
    ]
    choosen_month = months[month_index - 1]
    await callback.message.edit_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{choosen_month}</b>", parse_mode="HTML")
    await callback.answer()

#–£—Ç–æ—á–Ω—è–µ–µ–º –∑–∞–ø–∏—Å—å
@dp.message(F.text == "üî¥–£—Ç–æ—á–Ω–∏—Ç—å —Å–≤–æ—é –∑–∞–ø–∏—Å—å")
async def progress_check(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏!", reply_markup=cancel_button)
    
#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø–∏—Å–∏
@dp.message(F.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏")
async def check_places(message: types.Message):
    await message.answer("–°–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –µ—Å—Ç—å: ")
    
#–û—Ç–º–µ–Ω–∞    
@dp.callback_query(lambda c: c.data == "cancel")
async def cancel_place(callback_querty: types.CallbackQuery):
    await callback_querty.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é –∑–∞–ø–∏—Å—å")
    await callback_querty.answer()

#–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–∏–Ω–≥–∞
async def main():
    await dp.start_polling(bot)

#–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())